'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DataInventory")>  _
Partial Public Class medumoDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMEDUMO_Current_Appt(instance As MEDUMO_Current_Appt)
    End Sub
  Partial Private Sub UpdateMEDUMO_Current_Appt(instance As MEDUMO_Current_Appt)
    End Sub
  Partial Private Sub DeleteMEDUMO_Current_Appt(instance As MEDUMO_Current_Appt)
    End Sub
  Partial Private Sub InsertDataTransfer(instance As DataTransfer)
    End Sub
  Partial Private Sub UpdateDataTransfer(instance As DataTransfer)
    End Sub
  Partial Private Sub DeleteDataTransfer(instance As DataTransfer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.medumo.My.MySettings.Default.DataInventoryConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property vMEDUMO_Current_Appts_For_Uploads() As System.Data.Linq.Table(Of vMEDUMO_Current_Appts_For_Upload)
		Get
			Return Me.GetTable(Of vMEDUMO_Current_Appts_For_Upload)
		End Get
	End Property
	
	Public ReadOnly Property MEDUMO_Current_Appts() As System.Data.Linq.Table(Of MEDUMO_Current_Appt)
		Get
			Return Me.GetTable(Of MEDUMO_Current_Appt)
		End Get
	End Property
	
	Public ReadOnly Property DataTransfers() As System.Data.Linq.Table(Of DataTransfer)
		Get
			Return Me.GetTable(Of DataTransfer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vMEDUMO_Current_Appts_For_Upload")>  _
Partial Public Class vMEDUMO_Current_Appts_For_Upload
	
	Private _ID As Integer
	
	Private _MRN As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _DOB As System.Nullable(Of Date)
	
	Private _Sex As String
	
	Private _Zip As String
	
	Private _LanguagePrimary As String
	
	Private _LanguageCare As String
	
	Private _LanguageWritten As String
	
	Private _InterpreterNeeded As String
	
	Private _EnglishFluency As String
	
	Private _PrefCommunicationMethod As String
	
	Private _SendSMS As String
	
	Private _PhoneHome As String
	
	Private _PhoneWork As String
	
	Private _PhoneMobile As String
	
	Private _Email As String
	
	Private _StartDateTime As System.Nullable(Of Date)
	
	Private _DurationMinutes As System.Nullable(Of Integer)
	
	Private _EndDateTime As System.Nullable(Of Date)
	
	Private _ApptType As String
	
	Private _Provider As String
	
	Private _ApptStatus As String
	
	Private _HasBeenUploaded As System.Nullable(Of Boolean)
	
	Private _HasBeenUploadedTS As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRN", DbType:="VarChar(102)")>  _
	Public Property MRN() As String
		Get
			Return Me._MRN
		End Get
		Set
			If (String.Equals(Me._MRN, value) = false) Then
				Me._MRN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(200)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me._FirstName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="VarChar(200)")>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me._LastName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOB", DbType:="Date")>  _
	Public Property DOB() As System.Nullable(Of Date)
		Get
			Return Me._DOB
		End Get
		Set
			If (Me._DOB.Equals(value) = false) Then
				Me._DOB = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="VarChar(254)")>  _
	Public Property Sex() As String
		Get
			Return Me._Sex
		End Get
		Set
			If (String.Equals(Me._Sex, value) = false) Then
				Me._Sex = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zip", DbType:="VarChar(5)")>  _
	Public Property Zip() As String
		Get
			Return Me._Zip
		End Get
		Set
			If (String.Equals(Me._Zip, value) = false) Then
				Me._Zip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguagePrimary", DbType:="VarChar(254)")>  _
	Public Property LanguagePrimary() As String
		Get
			Return Me._LanguagePrimary
		End Get
		Set
			If (String.Equals(Me._LanguagePrimary, value) = false) Then
				Me._LanguagePrimary = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageCare", DbType:="VarChar(254)")>  _
	Public Property LanguageCare() As String
		Get
			Return Me._LanguageCare
		End Get
		Set
			If (String.Equals(Me._LanguageCare, value) = false) Then
				Me._LanguageCare = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageWritten", DbType:="VarChar(254)")>  _
	Public Property LanguageWritten() As String
		Get
			Return Me._LanguageWritten
		End Get
		Set
			If (String.Equals(Me._LanguageWritten, value) = false) Then
				Me._LanguageWritten = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InterpreterNeeded", DbType:="VarChar(1)")>  _
	Public Property InterpreterNeeded() As String
		Get
			Return Me._InterpreterNeeded
		End Get
		Set
			If (String.Equals(Me._InterpreterNeeded, value) = false) Then
				Me._InterpreterNeeded = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnglishFluency", DbType:="VarChar(254)")>  _
	Public Property EnglishFluency() As String
		Get
			Return Me._EnglishFluency
		End Get
		Set
			If (String.Equals(Me._EnglishFluency, value) = false) Then
				Me._EnglishFluency = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrefCommunicationMethod", DbType:="VarChar(254)")>  _
	Public Property PrefCommunicationMethod() As String
		Get
			Return Me._PrefCommunicationMethod
		End Get
		Set
			If (String.Equals(Me._PrefCommunicationMethod, value) = false) Then
				Me._PrefCommunicationMethod = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendSMS", DbType:="VarChar(1)")>  _
	Public Property SendSMS() As String
		Get
			Return Me._SendSMS
		End Get
		Set
			If (String.Equals(Me._SendSMS, value) = false) Then
				Me._SendSMS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="VarChar(192)")>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me._PhoneHome = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneWork", DbType:="VarChar(50)")>  _
	Public Property PhoneWork() As String
		Get
			Return Me._PhoneWork
		End Get
		Set
			If (String.Equals(Me._PhoneWork, value) = false) Then
				Me._PhoneWork = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneMobile", DbType:="VarChar(254)")>  _
	Public Property PhoneMobile() As String
		Get
			Return Me._PhoneMobile
		End Get
		Set
			If (String.Equals(Me._PhoneMobile, value) = false) Then
				Me._PhoneMobile = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(255)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDateTime", DbType:="DateTime")>  _
	Public Property StartDateTime() As System.Nullable(Of Date)
		Get
			Return Me._StartDateTime
		End Get
		Set
			If (Me._StartDateTime.Equals(value) = false) Then
				Me._StartDateTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DurationMinutes", DbType:="Int")>  _
	Public Property DurationMinutes() As System.Nullable(Of Integer)
		Get
			Return Me._DurationMinutes
		End Get
		Set
			If (Me._DurationMinutes.Equals(value) = false) Then
				Me._DurationMinutes = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDateTime", DbType:="DateTime")>  _
	Public Property EndDateTime() As System.Nullable(Of Date)
		Get
			Return Me._EndDateTime
		End Get
		Set
			If (Me._EndDateTime.Equals(value) = false) Then
				Me._EndDateTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApptType", DbType:="VarChar(200)")>  _
	Public Property ApptType() As String
		Get
			Return Me._ApptType
		End Get
		Set
			If (String.Equals(Me._ApptType, value) = false) Then
				Me._ApptType = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provider", DbType:="VarChar(275)")>  _
	Public Property Provider() As String
		Get
			Return Me._Provider
		End Get
		Set
			If (String.Equals(Me._Provider, value) = false) Then
				Me._Provider = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApptStatus", DbType:="VarChar(254)")>  _
	Public Property ApptStatus() As String
		Get
			Return Me._ApptStatus
		End Get
		Set
			If (String.Equals(Me._ApptStatus, value) = false) Then
				Me._ApptStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasBeenUploaded", DbType:="Bit")>  _
	Public Property HasBeenUploaded() As System.Nullable(Of Boolean)
		Get
			Return Me._HasBeenUploaded
		End Get
		Set
			If (Me._HasBeenUploaded.Equals(value) = false) Then
				Me._HasBeenUploaded = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasBeenUploadedTS", DbType:="DateTime")>  _
	Public Property HasBeenUploadedTS() As System.Nullable(Of Date)
		Get
			Return Me._HasBeenUploadedTS
		End Get
		Set
			If (Me._HasBeenUploadedTS.Equals(value) = false) Then
				Me._HasBeenUploadedTS = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MEDUMO_Current_Appts")>  _
Partial Public Class MEDUMO_Current_Appt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MRN As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _DOB As System.Nullable(Of Date)
	
	Private _Sex As String
	
	Private _Zip As String
	
	Private _LanguagePrimary As String
	
	Private _LanguageCare As String
	
	Private _LanguageWritten As String
	
	Private _InterpreterNeeded As String
	
	Private _EnglishFluency As String
	
	Private _PrefCommunicationMethod As String
	
	Private _SendSMS As String
	
	Private _PhoneHome As String
	
	Private _PhoneWork As String
	
	Private _PhoneMobile As String
	
	Private _Email As String
	
	Private _StartDateTime As System.Nullable(Of Date)
	
	Private _DurationMinutes As System.Nullable(Of Integer)
	
	Private _EndDateTime As System.Nullable(Of Date)
	
	Private _ApptType As String
	
	Private _Provider As String
	
	Private _ApptStatus As String
	
	Private _DateAdded As System.Nullable(Of Date)
	
	Private _HasBeenUploaded As System.Nullable(Of Boolean)
	
	Private _HasBeenUploadedTS As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMRNChanging(value As String)
    End Sub
    Partial Private Sub OnMRNChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnDOBChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOBChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As String)
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnZipChanging(value As String)
    End Sub
    Partial Private Sub OnZipChanged()
    End Sub
    Partial Private Sub OnLanguagePrimaryChanging(value As String)
    End Sub
    Partial Private Sub OnLanguagePrimaryChanged()
    End Sub
    Partial Private Sub OnLanguageCareChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageCareChanged()
    End Sub
    Partial Private Sub OnLanguageWrittenChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageWrittenChanged()
    End Sub
    Partial Private Sub OnInterpreterNeededChanging(value As String)
    End Sub
    Partial Private Sub OnInterpreterNeededChanged()
    End Sub
    Partial Private Sub OnEnglishFluencyChanging(value As String)
    End Sub
    Partial Private Sub OnEnglishFluencyChanged()
    End Sub
    Partial Private Sub OnPrefCommunicationMethodChanging(value As String)
    End Sub
    Partial Private Sub OnPrefCommunicationMethodChanged()
    End Sub
    Partial Private Sub OnSendSMSChanging(value As String)
    End Sub
    Partial Private Sub OnSendSMSChanged()
    End Sub
    Partial Private Sub OnPhoneHomeChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneHomeChanged()
    End Sub
    Partial Private Sub OnPhoneWorkChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneWorkChanged()
    End Sub
    Partial Private Sub OnPhoneMobileChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneMobileChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnStartDateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateTimeChanged()
    End Sub
    Partial Private Sub OnDurationMinutesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDurationMinutesChanged()
    End Sub
    Partial Private Sub OnEndDateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateTimeChanged()
    End Sub
    Partial Private Sub OnApptTypeChanging(value As String)
    End Sub
    Partial Private Sub OnApptTypeChanged()
    End Sub
    Partial Private Sub OnProviderChanging(value As String)
    End Sub
    Partial Private Sub OnProviderChanged()
    End Sub
    Partial Private Sub OnApptStatusChanging(value As String)
    End Sub
    Partial Private Sub OnApptStatusChanged()
    End Sub
    Partial Private Sub OnDateAddedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateAddedChanged()
    End Sub
    Partial Private Sub OnHasBeenUploadedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnHasBeenUploadedChanged()
    End Sub
    Partial Private Sub OnHasBeenUploadedTSChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnHasBeenUploadedTSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MRN", DbType:="VarChar(102)")>  _
	Public Property MRN() As String
		Get
			Return Me._MRN
		End Get
		Set
			If (String.Equals(Me._MRN, value) = false) Then
				Me.OnMRNChanging(value)
				Me.SendPropertyChanging
				Me._MRN = value
				Me.SendPropertyChanged("MRN")
				Me.OnMRNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="VarChar(200)")>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="VarChar(200)")>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOB", DbType:="Date")>  _
	Public Property DOB() As System.Nullable(Of Date)
		Get
			Return Me._DOB
		End Get
		Set
			If (Me._DOB.Equals(value) = false) Then
				Me.OnDOBChanging(value)
				Me.SendPropertyChanging
				Me._DOB = value
				Me.SendPropertyChanged("DOB")
				Me.OnDOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sex", DbType:="VarChar(254)")>  _
	Public Property Sex() As String
		Get
			Return Me._Sex
		End Get
		Set
			If (String.Equals(Me._Sex, value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Zip", DbType:="VarChar(5)")>  _
	Public Property Zip() As String
		Get
			Return Me._Zip
		End Get
		Set
			If (String.Equals(Me._Zip, value) = false) Then
				Me.OnZipChanging(value)
				Me.SendPropertyChanging
				Me._Zip = value
				Me.SendPropertyChanged("Zip")
				Me.OnZipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguagePrimary", DbType:="VarChar(254)")>  _
	Public Property LanguagePrimary() As String
		Get
			Return Me._LanguagePrimary
		End Get
		Set
			If (String.Equals(Me._LanguagePrimary, value) = false) Then
				Me.OnLanguagePrimaryChanging(value)
				Me.SendPropertyChanging
				Me._LanguagePrimary = value
				Me.SendPropertyChanged("LanguagePrimary")
				Me.OnLanguagePrimaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageCare", DbType:="VarChar(254)")>  _
	Public Property LanguageCare() As String
		Get
			Return Me._LanguageCare
		End Get
		Set
			If (String.Equals(Me._LanguageCare, value) = false) Then
				Me.OnLanguageCareChanging(value)
				Me.SendPropertyChanging
				Me._LanguageCare = value
				Me.SendPropertyChanged("LanguageCare")
				Me.OnLanguageCareChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageWritten", DbType:="VarChar(254)")>  _
	Public Property LanguageWritten() As String
		Get
			Return Me._LanguageWritten
		End Get
		Set
			If (String.Equals(Me._LanguageWritten, value) = false) Then
				Me.OnLanguageWrittenChanging(value)
				Me.SendPropertyChanging
				Me._LanguageWritten = value
				Me.SendPropertyChanged("LanguageWritten")
				Me.OnLanguageWrittenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InterpreterNeeded", DbType:="VarChar(1)")>  _
	Public Property InterpreterNeeded() As String
		Get
			Return Me._InterpreterNeeded
		End Get
		Set
			If (String.Equals(Me._InterpreterNeeded, value) = false) Then
				Me.OnInterpreterNeededChanging(value)
				Me.SendPropertyChanging
				Me._InterpreterNeeded = value
				Me.SendPropertyChanged("InterpreterNeeded")
				Me.OnInterpreterNeededChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnglishFluency", DbType:="VarChar(254)")>  _
	Public Property EnglishFluency() As String
		Get
			Return Me._EnglishFluency
		End Get
		Set
			If (String.Equals(Me._EnglishFluency, value) = false) Then
				Me.OnEnglishFluencyChanging(value)
				Me.SendPropertyChanging
				Me._EnglishFluency = value
				Me.SendPropertyChanged("EnglishFluency")
				Me.OnEnglishFluencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrefCommunicationMethod", DbType:="VarChar(254)")>  _
	Public Property PrefCommunicationMethod() As String
		Get
			Return Me._PrefCommunicationMethod
		End Get
		Set
			If (String.Equals(Me._PrefCommunicationMethod, value) = false) Then
				Me.OnPrefCommunicationMethodChanging(value)
				Me.SendPropertyChanging
				Me._PrefCommunicationMethod = value
				Me.SendPropertyChanged("PrefCommunicationMethod")
				Me.OnPrefCommunicationMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SendSMS", DbType:="VarChar(1)")>  _
	Public Property SendSMS() As String
		Get
			Return Me._SendSMS
		End Get
		Set
			If (String.Equals(Me._SendSMS, value) = false) Then
				Me.OnSendSMSChanging(value)
				Me.SendPropertyChanging
				Me._SendSMS = value
				Me.SendPropertyChanged("SendSMS")
				Me.OnSendSMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneHome", DbType:="VarChar(192)")>  _
	Public Property PhoneHome() As String
		Get
			Return Me._PhoneHome
		End Get
		Set
			If (String.Equals(Me._PhoneHome, value) = false) Then
				Me.OnPhoneHomeChanging(value)
				Me.SendPropertyChanging
				Me._PhoneHome = value
				Me.SendPropertyChanged("PhoneHome")
				Me.OnPhoneHomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneWork", DbType:="VarChar(50)")>  _
	Public Property PhoneWork() As String
		Get
			Return Me._PhoneWork
		End Get
		Set
			If (String.Equals(Me._PhoneWork, value) = false) Then
				Me.OnPhoneWorkChanging(value)
				Me.SendPropertyChanging
				Me._PhoneWork = value
				Me.SendPropertyChanged("PhoneWork")
				Me.OnPhoneWorkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneMobile", DbType:="VarChar(254)")>  _
	Public Property PhoneMobile() As String
		Get
			Return Me._PhoneMobile
		End Get
		Set
			If (String.Equals(Me._PhoneMobile, value) = false) Then
				Me.OnPhoneMobileChanging(value)
				Me.SendPropertyChanging
				Me._PhoneMobile = value
				Me.SendPropertyChanged("PhoneMobile")
				Me.OnPhoneMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(255)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDateTime", DbType:="DateTime")>  _
	Public Property StartDateTime() As System.Nullable(Of Date)
		Get
			Return Me._StartDateTime
		End Get
		Set
			If (Me._StartDateTime.Equals(value) = false) Then
				Me.OnStartDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._StartDateTime = value
				Me.SendPropertyChanged("StartDateTime")
				Me.OnStartDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DurationMinutes", DbType:="Int")>  _
	Public Property DurationMinutes() As System.Nullable(Of Integer)
		Get
			Return Me._DurationMinutes
		End Get
		Set
			If (Me._DurationMinutes.Equals(value) = false) Then
				Me.OnDurationMinutesChanging(value)
				Me.SendPropertyChanging
				Me._DurationMinutes = value
				Me.SendPropertyChanged("DurationMinutes")
				Me.OnDurationMinutesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDateTime", DbType:="DateTime")>  _
	Public Property EndDateTime() As System.Nullable(Of Date)
		Get
			Return Me._EndDateTime
		End Get
		Set
			If (Me._EndDateTime.Equals(value) = false) Then
				Me.OnEndDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._EndDateTime = value
				Me.SendPropertyChanged("EndDateTime")
				Me.OnEndDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApptType", DbType:="VarChar(200)")>  _
	Public Property ApptType() As String
		Get
			Return Me._ApptType
		End Get
		Set
			If (String.Equals(Me._ApptType, value) = false) Then
				Me.OnApptTypeChanging(value)
				Me.SendPropertyChanging
				Me._ApptType = value
				Me.SendPropertyChanged("ApptType")
				Me.OnApptTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provider", DbType:="VarChar(275)")>  _
	Public Property Provider() As String
		Get
			Return Me._Provider
		End Get
		Set
			If (String.Equals(Me._Provider, value) = false) Then
				Me.OnProviderChanging(value)
				Me.SendPropertyChanging
				Me._Provider = value
				Me.SendPropertyChanged("Provider")
				Me.OnProviderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApptStatus", DbType:="VarChar(254)")>  _
	Public Property ApptStatus() As String
		Get
			Return Me._ApptStatus
		End Get
		Set
			If (String.Equals(Me._ApptStatus, value) = false) Then
				Me.OnApptStatusChanging(value)
				Me.SendPropertyChanging
				Me._ApptStatus = value
				Me.SendPropertyChanged("ApptStatus")
				Me.OnApptStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAdded", DbType:="DateTime")>  _
	Public Property DateAdded() As System.Nullable(Of Date)
		Get
			Return Me._DateAdded
		End Get
		Set
			If (Me._DateAdded.Equals(value) = false) Then
				Me.OnDateAddedChanging(value)
				Me.SendPropertyChanging
				Me._DateAdded = value
				Me.SendPropertyChanged("DateAdded")
				Me.OnDateAddedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasBeenUploaded", DbType:="Bit")>  _
	Public Property HasBeenUploaded() As System.Nullable(Of Boolean)
		Get
			Return Me._HasBeenUploaded
		End Get
		Set
			If (Me._HasBeenUploaded.Equals(value) = false) Then
				Me.OnHasBeenUploadedChanging(value)
				Me.SendPropertyChanging
				Me._HasBeenUploaded = value
				Me.SendPropertyChanged("HasBeenUploaded")
				Me.OnHasBeenUploadedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasBeenUploadedTS", DbType:="DateTime")>  _
	Public Property HasBeenUploadedTS() As System.Nullable(Of Date)
		Get
			Return Me._HasBeenUploadedTS
		End Get
		Set
			If (Me._HasBeenUploadedTS.Equals(value) = false) Then
				Me.OnHasBeenUploadedTSChanging(value)
				Me.SendPropertyChanging
				Me._HasBeenUploadedTS = value
				Me.SendPropertyChanged("HasBeenUploadedTS")
				Me.OnHasBeenUploadedTSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="[log].DataTransfers")>  _
Partial Public Class DataTransfer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _LogEntryCreated As System.Nullable(Of Date)
	
	Private _ActivityType As String
	
	Private _ActionName As String
	
	Private _SucceedFail As System.Nullable(Of Boolean)
	
	Private _ErrorMessage As String
	
	Private _ResultDesc As String
	
	Private _ResultValue As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnLogEntryCreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLogEntryCreatedChanged()
    End Sub
    Partial Private Sub OnActivityTypeChanging(value As String)
    End Sub
    Partial Private Sub OnActivityTypeChanged()
    End Sub
    Partial Private Sub OnActionNameChanging(value As String)
    End Sub
    Partial Private Sub OnActionNameChanged()
    End Sub
    Partial Private Sub OnSucceedFailChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSucceedFailChanged()
    End Sub
    Partial Private Sub OnErrorMessageChanging(value As String)
    End Sub
    Partial Private Sub OnErrorMessageChanged()
    End Sub
    Partial Private Sub OnResultDescChanging(value As String)
    End Sub
    Partial Private Sub OnResultDescChanged()
    End Sub
    Partial Private Sub OnResultValueChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnResultValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogEntryCreated", DbType:="DateTime")>  _
	Public Property LogEntryCreated() As System.Nullable(Of Date)
		Get
			Return Me._LogEntryCreated
		End Get
		Set
			If (Me._LogEntryCreated.Equals(value) = false) Then
				Me.OnLogEntryCreatedChanging(value)
				Me.SendPropertyChanging
				Me._LogEntryCreated = value
				Me.SendPropertyChanged("LogEntryCreated")
				Me.OnLogEntryCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActivityType", DbType:="VarChar(100)")>  _
	Public Property ActivityType() As String
		Get
			Return Me._ActivityType
		End Get
		Set
			If (String.Equals(Me._ActivityType, value) = false) Then
				Me.OnActivityTypeChanging(value)
				Me.SendPropertyChanging
				Me._ActivityType = value
				Me.SendPropertyChanged("ActivityType")
				Me.OnActivityTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActionName", DbType:="VarChar(100)")>  _
	Public Property ActionName() As String
		Get
			Return Me._ActionName
		End Get
		Set
			If (String.Equals(Me._ActionName, value) = false) Then
				Me.OnActionNameChanging(value)
				Me.SendPropertyChanging
				Me._ActionName = value
				Me.SendPropertyChanged("ActionName")
				Me.OnActionNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SucceedFail", DbType:="Bit")>  _
	Public Property SucceedFail() As System.Nullable(Of Boolean)
		Get
			Return Me._SucceedFail
		End Get
		Set
			If (Me._SucceedFail.Equals(value) = false) Then
				Me.OnSucceedFailChanging(value)
				Me.SendPropertyChanging
				Me._SucceedFail = value
				Me.SendPropertyChanged("SucceedFail")
				Me.OnSucceedFailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="VarChar(1000)")>  _
	Public Property ErrorMessage() As String
		Get
			Return Me._ErrorMessage
		End Get
		Set
			If (String.Equals(Me._ErrorMessage, value) = false) Then
				Me.OnErrorMessageChanging(value)
				Me.SendPropertyChanging
				Me._ErrorMessage = value
				Me.SendPropertyChanged("ErrorMessage")
				Me.OnErrorMessageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultDesc", DbType:="VarChar(1000)")>  _
	Public Property ResultDesc() As String
		Get
			Return Me._ResultDesc
		End Get
		Set
			If (String.Equals(Me._ResultDesc, value) = false) Then
				Me.OnResultDescChanging(value)
				Me.SendPropertyChanging
				Me._ResultDesc = value
				Me.SendPropertyChanged("ResultDesc")
				Me.OnResultDescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultValue", DbType:="Float")>  _
	Public Property ResultValue() As System.Nullable(Of Double)
		Get
			Return Me._ResultValue
		End Get
		Set
			If (Me._ResultValue.Equals(value) = false) Then
				Me.OnResultValueChanging(value)
				Me.SendPropertyChanging
				Me._ResultValue = value
				Me.SendPropertyChanged("ResultValue")
				Me.OnResultValueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
